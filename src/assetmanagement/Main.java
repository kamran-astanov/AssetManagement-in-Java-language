/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assetmanagement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import DBConnectivity.DBConnection;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author kastanov
 */
public class Main extends javax.swing.JFrame {
    
    public Main() throws SQLException {
        this.c = DBConnectivity.DBConnection.DBcon();
        initComponents();
        JTableHeader tableHeader = tb_Assets_view.getTableHeader();
        Font headerFont = new Font("Arial", Font.BOLD, 22);
        tableHeader.setBackground(Color.black);
        tableHeader.setForeground(Color.white);
        tableHeader.setFont(headerFont);
    }
    Connection c;
    PreparedStatement stmt =null;
    Statement st =  null;
    ResultSet rs = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        plAddAsset = new javax.swing.JPanel();
        cbDevice = new javax.swing.JComboBox<>();
        lbSerialNumber = new javax.swing.JLabel();
        lbModel = new javax.swing.JLabel();
        lbSelectDevice = new javax.swing.JLabel();
        txModel = new javax.swing.JTextField();
        txSerialNumber = new javax.swing.JTextField();
        btadd = new javax.swing.JButton();
        lbAssignedUser = new javax.swing.JLabel();
        lbSatus = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        txAssignedUser = new javax.swing.JTextField();
        clear1 = new javax.swing.JButton();
        plUpsateAsset = new javax.swing.JPanel();
        plUpdateAsset2 = new javax.swing.JPanel();
        lbSelectDevice_update = new javax.swing.JLabel();
        cbDevice_update = new javax.swing.JComboBox<>();
        lbSerialNumber_update = new javax.swing.JLabel();
        txSerialNumber_update = new javax.swing.JTextField();
        lbModel_update = new javax.swing.JLabel();
        txModel_update = new javax.swing.JTextField();
        cbStatus_update = new javax.swing.JComboBox<>();
        lbStatus_update = new javax.swing.JLabel();
        lbAssignedUser_update = new javax.swing.JLabel();
        btupdate = new javax.swing.JButton();
        txAssignedUser_update = new javax.swing.JTextField();
        clear2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cbSelectDevice_view = new javax.swing.JComboBox<>();
        lbSelectDevice_view = new javax.swing.JLabel();
        spAssets_view = new javax.swing.JScrollPane();
        tb_Assets_view = new javax.swing.JTable();
        view_update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 0));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N

        plAddAsset.setBackground(new java.awt.Color(255, 255, 255));

        cbDevice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbDevice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monitor", "Laptop", "Phone", "IBT" }));
        cbDevice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbDeviceMouseClicked(evt);
            }
        });
        cbDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDeviceActionPerformed(evt);
            }
        });

        lbSerialNumber.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSerialNumber.setText("Serial Number");
        lbSerialNumber.setPreferredSize(new java.awt.Dimension(155, 30));

        lbModel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbModel.setText("Model");
        lbModel.setPreferredSize(new java.awt.Dimension(155, 30));

        lbSelectDevice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSelectDevice.setText("Select Device");
        lbSelectDevice.setPreferredSize(new java.awt.Dimension(155, 30));

        txModel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txModel.setPreferredSize(new java.awt.Dimension(165, 55));
        txModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txModelActionPerformed(evt);
            }
        });

        txSerialNumber.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txSerialNumber.setPreferredSize(new java.awt.Dimension(165, 55));
        txSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSerialNumberActionPerformed(evt);
            }
        });

        btadd.setBackground(new java.awt.Color(0, 0, 0));
        btadd.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btadd.setForeground(new java.awt.Color(255, 255, 255));
        btadd.setText("add");
        btadd.setPreferredSize(new java.awt.Dimension(110, 35));
        btadd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btaddMouseClicked(evt);
            }
        });
        btadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaddActionPerformed(evt);
            }
        });

        lbAssignedUser.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbAssignedUser.setText("Assigned User");
        lbAssignedUser.setPreferredSize(new java.awt.Dimension(155, 30));

        lbSatus.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSatus.setText("Status");
        lbSatus.setPreferredSize(new java.awt.Dimension(155, 30));

        cbStatus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Store", "In Use" }));
        cbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusActionPerformed(evt);
            }
        });

        txAssignedUser.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txAssignedUser.setPreferredSize(new java.awt.Dimension(165, 55));
        txAssignedUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAssignedUserActionPerformed(evt);
            }
        });

        clear1.setBackground(new java.awt.Color(0, 0, 0));
        clear1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clear1.setForeground(new java.awt.Color(255, 255, 255));
        clear1.setText("clear");
        clear1.setPreferredSize(new java.awt.Dimension(110, 35));
        clear1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clear1MouseClicked(evt);
            }
        });
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout plAddAssetLayout = new javax.swing.GroupLayout(plAddAsset);
        plAddAsset.setLayout(plAddAssetLayout);
        plAddAssetLayout.setHorizontalGroup(
            plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAddAssetLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbAssignedUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbSatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbSerialNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btadd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txAssignedUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(491, Short.MAX_VALUE))
            .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(plAddAssetLayout.createSequentialGroup()
                    .addGap(54, 54, 54)
                    .addComponent(lbSelectDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(662, Short.MAX_VALUE)))
        );
        plAddAssetLayout.setVerticalGroup(
            plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plAddAssetLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(cbDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbModel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSatus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAssignedUser, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txAssignedUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btadd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(457, Short.MAX_VALUE))
            .addGroup(plAddAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(plAddAssetLayout.createSequentialGroup()
                    .addGap(41, 41, 41)
                    .addComponent(lbSelectDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(823, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Add Asset", plAddAsset);

        plUpdateAsset2.setBackground(new java.awt.Color(255, 255, 255));

        lbSelectDevice_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSelectDevice_update.setText("Select Device");
        lbSelectDevice_update.setPreferredSize(new java.awt.Dimension(155, 30));

        cbDevice_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbDevice_update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monitor", "Laptop", "Phone", "IBT" }));
        cbDevice_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDevice_updateActionPerformed(evt);
            }
        });

        lbSerialNumber_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSerialNumber_update.setText("Serial Number");
        lbSerialNumber_update.setPreferredSize(new java.awt.Dimension(155, 30));

        txSerialNumber_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txSerialNumber_update.setPreferredSize(new java.awt.Dimension(165, 55));
        txSerialNumber_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSerialNumber_updateActionPerformed(evt);
            }
        });

        lbModel_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbModel_update.setText("Model");
        lbModel_update.setPreferredSize(new java.awt.Dimension(155, 30));

        txModel_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txModel_update.setPreferredSize(new java.awt.Dimension(165, 55));
        txModel_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txModel_updateActionPerformed(evt);
            }
        });

        cbStatus_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbStatus_update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "In Store", "In Use" }));
        cbStatus_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatus_updateActionPerformed(evt);
            }
        });

        lbStatus_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbStatus_update.setText("Status");
        lbStatus_update.setPreferredSize(new java.awt.Dimension(155, 30));

        lbAssignedUser_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbAssignedUser_update.setText("Assigned User");
        lbAssignedUser_update.setPreferredSize(new java.awt.Dimension(155, 30));

        btupdate.setBackground(new java.awt.Color(0, 0, 0));
        btupdate.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btupdate.setForeground(new java.awt.Color(255, 255, 255));
        btupdate.setText("update");
        btupdate.setPreferredSize(new java.awt.Dimension(110, 35));
        btupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btupdateActionPerformed(evt);
            }
        });

        txAssignedUser_update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txAssignedUser_update.setPreferredSize(new java.awt.Dimension(165, 55));
        txAssignedUser_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAssignedUser_updateActionPerformed(evt);
            }
        });

        clear2.setBackground(new java.awt.Color(0, 0, 0));
        clear2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clear2.setForeground(new java.awt.Color(255, 255, 255));
        clear2.setText("clear");
        clear2.setPreferredSize(new java.awt.Dimension(110, 35));
        clear2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clear2MouseClicked(evt);
            }
        });
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout plUpdateAsset2Layout = new javax.swing.GroupLayout(plUpdateAsset2);
        plUpdateAsset2.setLayout(plUpdateAsset2Layout);
        plUpdateAsset2Layout.setHorizontalGroup(
            plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plUpdateAsset2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbSerialNumber_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbSelectDevice_update, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                        .addComponent(lbModel_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbStatus_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbAssignedUser_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbStatus_update, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDevice_update, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txSerialNumber_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txModel_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txAssignedUser_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(491, Short.MAX_VALUE))
        );
        plUpdateAsset2Layout.setVerticalGroup(
            plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plUpdateAsset2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSelectDevice_update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDevice_update, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSerialNumber_update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txSerialNumber_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbModel_update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txModel_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbStatus_update, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbStatus_update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAssignedUser_update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txAssignedUser_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(plUpdateAsset2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(456, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout plUpsateAssetLayout = new javax.swing.GroupLayout(plUpsateAsset);
        plUpsateAsset.setLayout(plUpsateAssetLayout);
        plUpsateAssetLayout.setHorizontalGroup(
            plUpsateAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 882, Short.MAX_VALUE)
            .addGroup(plUpsateAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(plUpdateAsset2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        plUpsateAssetLayout.setVerticalGroup(
            plUpsateAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 918, Short.MAX_VALUE)
            .addGroup(plUpsateAssetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(plUpdateAsset2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Update Asset", plUpsateAsset);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(1500, 1500));

        cbSelectDevice_view.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbSelectDevice_view.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monitor", "Laptop", "Phone", "IBT" }));
        cbSelectDevice_view.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSelectDevice_viewItemStateChanged(evt);
            }
        });
        cbSelectDevice_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectDevice_viewActionPerformed(evt);
            }
        });

        lbSelectDevice_view.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbSelectDevice_view.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSelectDevice_view.setText("Select Device");

        tb_Assets_view.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tb_Assets_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial_Number", "Model", "Status", "Assigned_User"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_Assets_view.setColumnSelectionAllowed(true);
        tb_Assets_view.setPreferredSize(new java.awt.Dimension(1100, 1500));
        tb_Assets_view.setRequestFocusEnabled(false);
        tb_Assets_view.setRowHeight(50);
        tb_Assets_view.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tb_Assets_view.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        spAssets_view.setViewportView(tb_Assets_view);
        tb_Assets_view.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tb_Assets_view.getColumnModel().getColumnCount() > 0) {
            tb_Assets_view.getColumnModel().getColumn(0).setResizable(false);
            tb_Assets_view.getColumnModel().getColumn(0).setPreferredWidth(50);
            tb_Assets_view.getColumnModel().getColumn(1).setResizable(false);
            tb_Assets_view.getColumnModel().getColumn(1).setPreferredWidth(50);
            tb_Assets_view.getColumnModel().getColumn(2).setResizable(false);
            tb_Assets_view.getColumnModel().getColumn(3).setResizable(false);
        }
        tb_Assets_view.getAccessibleContext().setAccessibleName("");

        view_update.setBackground(new java.awt.Color(0, 0, 0));
        view_update.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        view_update.setForeground(new java.awt.Color(255, 255, 255));
        view_update.setText("update");
        view_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_updateMouseClicked(evt);
            }
        });
        view_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lbSelectDevice_view, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSelectDevice_view, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(view_update)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(spAssets_view, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSelectDevice_view, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSelectDevice_view, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(view_update))
                .addGap(29, 29, 29)
                .addComponent(spAssets_view, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("View Asset", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDeviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDeviceActionPerformed

    private void txModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txModelActionPerformed

    private void txSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSerialNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSerialNumberActionPerformed

    private void btaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btaddActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStatusActionPerformed

    private void cbSelectDevice_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectDevice_viewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectDevice_viewActionPerformed

    private void cbDevice_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDevice_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDevice_updateActionPerformed

    private void txSerialNumber_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSerialNumber_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txSerialNumber_updateActionPerformed

    private void txModel_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txModel_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txModel_updateActionPerformed

    private void cbStatus_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatus_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStatus_updateActionPerformed

    private void btupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btupdateActionPerformed
        String device = cbDevice_update.getSelectedItem().toString();
        String query = "update " + device + " set Model =? Status=?, AssignedUser=? where SerialNumber=?";   
        if(txSerialNumber_update.getText().isEmpty() || txModel_update.getText().isEmpty() || txAssignedUser_update.getText().isEmpty()){
              JLabel label = new JLabel("Missing Information!");
             label.setFont(new Font("Arial", Font.BOLD, 14));
            JOptionPane.showMessageDialog(this, label);
        }  
        else{
            try {
                stmt = c.prepareStatement(query);
                stmt.setString(1, txModel_update.getText());
                stmt.setString(2, cbStatus_update.getSelectedItem().toString());
                stmt.setString(3, txAssignedUser_update.getText());              
                stmt.setString(4, txSerialNumber_update.getText());
                stmt.execute();
                JOptionPane.showMessageDialog(this, "Asset updated successfully!");
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }                                  
    }//GEN-LAST:event_btupdateActionPerformed

    private void txAssignedUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAssignedUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAssignedUserActionPerformed

    private void txAssignedUser_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAssignedUser_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAssignedUser_updateActionPerformed

    private void btaddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btaddMouseClicked
        String device = cbDevice.getSelectedItem().toString();
        String query = "insert into " + device + "(SerialNumber, Model, Status, AssignedUser)" + " values (?,?,?,?)";   
        if(txSerialNumber.getText().isEmpty() || txModel.getText().isEmpty() || txAssignedUser.getText().isEmpty()){
             JLabel label = new JLabel("Missing Information!");
             label.setFont(new Font("Arial", Font.BOLD, 14));
            JOptionPane.showMessageDialog(this, label);
        }  
        else{
            try {
                stmt = c.prepareStatement(query);
                stmt.setString(1, txSerialNumber.getText());
                stmt.setString(2, txModel.getText());
                stmt.setString(3, cbStatus.getSelectedItem().toString());
                stmt.setString(4, txAssignedUser.getText());
                stmt.execute();
                JOptionPane.showMessageDialog(this, "Asset added successfully!");
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btaddMouseClicked
   }
    private void cbDeviceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbDeviceMouseClicked
       
    }//GEN-LAST:event_cbDeviceMouseClicked

    private void cbSelectDevice_viewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSelectDevice_viewItemStateChanged
             String item = cbSelectDevice_view.getSelectedItem().toString();
             DefaultTableModel tbModel = (DefaultTableModel)tb_Assets_view.getModel();
             tbModel.setRowCount(0);
      try{
          st = c.createStatement();
          rs = st.executeQuery("Select * from " + item);
          while(rs.next()){
             String Serial_Number = rs.getString("SerialNumber");
             String Model = rs.getString("Model");
             String Status = rs.getString("Status");
             String Assigned_User = rs.getString("AssignedUser");
             String tbData[] = {Serial_Number, Model, Status, Assigned_User};
             tbModel.addRow(tbData);
             
          }   
      }catch(SQLException ex){
          ex.printStackTrace();
      }
    }//GEN-LAST:event_cbSelectDevice_viewItemStateChanged

    private void view_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_view_updateActionPerformed

    private void view_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_updateMouseClicked
              String item = cbSelectDevice_view.getSelectedItem().toString();
              DefaultTableModel tbModel = (DefaultTableModel)tb_Assets_view.getModel();
              tbModel.setRowCount(0);
      try{
          st = c.createStatement();
          rs = st.executeQuery("Select * from " + item);
          while(rs.next()){
             String Serial_Number = rs.getString("SerialNumber");
             String Model = rs.getString("Model");
             String Status = rs.getString("Status");
             String Assigned_User = rs.getString("AssignedUser");
             String tbData[] = {Serial_Number, Model, Status, Assigned_User};
             tbModel.addRow(tbData);
             
          }   
      }catch(SQLException ex){
          ex.printStackTrace();
      }
    }//GEN-LAST:event_view_updateMouseClicked

    private void clear1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear1MouseClicked
        txSerialNumber.setText("");
        txModel.setText("");
        txAssignedUser.setText("");
    }//GEN-LAST:event_clear1MouseClicked

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear1ActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clear2ActionPerformed

    private void clear2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear2MouseClicked
        txSerialNumber_update.setText("");
        txModel_update.setText("");
        txAssignedUser_update.setText("");
    }//GEN-LAST:event_clear2MouseClicked

    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     */
    public static void main(String args[]) throws SQLException {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btadd;
    private javax.swing.JButton btupdate;
    private javax.swing.JComboBox<String> cbDevice;
    private javax.swing.JComboBox<String> cbDevice_update;
    private javax.swing.JComboBox<String> cbSelectDevice_view;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<String> cbStatus_update;
    private javax.swing.JButton clear1;
    private javax.swing.JButton clear2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbAssignedUser;
    private javax.swing.JLabel lbAssignedUser_update;
    private javax.swing.JLabel lbModel;
    private javax.swing.JLabel lbModel_update;
    private javax.swing.JLabel lbSatus;
    private javax.swing.JLabel lbSelectDevice;
    private javax.swing.JLabel lbSelectDevice_update;
    private javax.swing.JLabel lbSelectDevice_view;
    private javax.swing.JLabel lbSerialNumber;
    private javax.swing.JLabel lbSerialNumber_update;
    private javax.swing.JLabel lbStatus_update;
    private javax.swing.JPanel plAddAsset;
    private javax.swing.JPanel plUpdateAsset2;
    private javax.swing.JPanel plUpsateAsset;
    private javax.swing.JScrollPane spAssets_view;
    private javax.swing.JTable tb_Assets_view;
    private javax.swing.JTextField txAssignedUser;
    private javax.swing.JTextField txAssignedUser_update;
    private javax.swing.JTextField txModel;
    private javax.swing.JTextField txModel_update;
    private javax.swing.JTextField txSerialNumber;
    private javax.swing.JTextField txSerialNumber_update;
    private javax.swing.JButton view_update;
    // End of variables declaration//GEN-END:variables
}
